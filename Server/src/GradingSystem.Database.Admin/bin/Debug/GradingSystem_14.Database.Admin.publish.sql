/*
Deployment script for Admin

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Admin"
:setvar DefaultFilePrefix "Admin"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key 0b677340-46ce-4b39-a723-4848a34e1323 is skipped, element [dbo].[Students].[Adress] (SqlSimpleColumn) will not be renamed to Address';


GO
PRINT N'Rename refactoring operation with key aa99b49f-6bfa-4965-bb83-5f7accda096b is skipped, element [dbo].[ThesisPages].[Blob] (SqlSimpleColumn) will not be renamed to BlobId';


GO
PRINT N'Creating Table [dbo].[EvaluationSchemes]...';


GO
CREATE TABLE [dbo].[EvaluationSchemes] (
    [Id]           UNIQUEIDENTIFIER NOT NULL,
    [ExamId]       UNIQUEIDENTIFIER NOT NULL,
    [ItemNr]       INT              NOT NULL,
    [PageNr]       INT              NOT NULL,
    [ScoreValue]   INT              NOT NULL,
    [ScoreComment] NVARCHAR (MAX)   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Evaluators]...';


GO
CREATE TABLE [dbo].[Evaluators] (
    [Id]        UNIQUEIDENTIFIER NOT NULL,
    [FirstName] NVARCHAR (50)    NOT NULL,
    [LastName]  NVARCHAR (50)    NOT NULL,
    [SubjectId] UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Exams]...';


GO
CREATE TABLE [dbo].[Exams] (
    [Id]                 UNIQUEIDENTIFIER NOT NULL,
    [Name]               NVARCHAR (50)    NOT NULL,
    [StartDate]          DATETIME         NOT NULL,
    [EndDate]            DATETIME         NOT NULL,
    [NumberOfPages]      INT              NOT NULL,
    [NumberOfEvaluators] INT              NOT NULL,
    [SubjectId]          UNIQUEIDENTIFIER NOT NULL,
    [EvaluationSchemeId] UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[GradeSchemes]...';


GO
CREATE TABLE [dbo].[GradeSchemes] (
    [Id]           UNIQUEIDENTIFIER NOT NULL,
    [ExamId]       UNIQUEIDENTIFIER NOT NULL,
    [Grade]        DECIMAL (18, 3)  NOT NULL,
    [MinimumScore] INT              NOT NULL,
    [MaximumScore] INT              NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Students]...';


GO
CREATE TABLE [dbo].[Students] (
    [Id]        UNIQUEIDENTIFIER NOT NULL,
    [FirstName] NVARCHAR (50)    NOT NULL,
    [LastName]  NVARCHAR (50)    NOT NULL,
    [IDNP]      NCHAR (13)       NOT NULL,
    [BirthDate] DATE             NOT NULL,
    [Address]   NVARCHAR (200)   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Subjects]...';


GO
CREATE TABLE [dbo].[Subjects] (
    [Id]          UNIQUEIDENTIFIER NOT NULL,
    [Name]        NVARCHAR (50)    NOT NULL,
    [Description] NVARCHAR (200)   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[EvaluationSchemes]...';


GO
ALTER TABLE [dbo].[EvaluationSchemes]
    ADD DEFAULT newid() FOR [Id];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Evaluators]...';


GO
ALTER TABLE [dbo].[Evaluators]
    ADD DEFAULT newid() FOR [Id];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Exams]...';


GO
ALTER TABLE [dbo].[Exams]
    ADD DEFAULT newid() FOR [Id];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[GradeSchemes]...';


GO
ALTER TABLE [dbo].[GradeSchemes]
    ADD DEFAULT newid() FOR [Id];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Students]...';


GO
ALTER TABLE [dbo].[Students]
    ADD DEFAULT newid() FOR [Id];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Subjects]...';


GO
ALTER TABLE [dbo].[Subjects]
    ADD DEFAULT newid() FOR [Id];


GO
PRINT N'Creating Foreign Key [dbo].[FK_EvaluatorSubjectId]...';


GO
ALTER TABLE [dbo].[Evaluators] WITH NOCHECK
    ADD CONSTRAINT [FK_EvaluatorSubjectId] FOREIGN KEY ([SubjectId]) REFERENCES [dbo].[Subjects] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ExamSubjectId]...';


GO
ALTER TABLE [dbo].[Exams] WITH NOCHECK
    ADD CONSTRAINT [FK_ExamSubjectId] FOREIGN KEY ([SubjectId]) REFERENCES [dbo].[Subjects] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ExamEvaluationSchemeId]...';


GO
ALTER TABLE [dbo].[Exams] WITH NOCHECK
    ADD CONSTRAINT [FK_ExamEvaluationSchemeId] FOREIGN KEY ([EvaluationSchemeId]) REFERENCES [dbo].[EvaluationSchemes] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ExamId]...';


GO
ALTER TABLE [dbo].[GradeSchemes] WITH NOCHECK
    ADD CONSTRAINT [FK_ExamId] FOREIGN KEY ([ExamId]) REFERENCES [dbo].[Exams] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0b677340-46ce-4b39-a723-4848a34e1323')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0b677340-46ce-4b39-a723-4848a34e1323')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'aa99b49f-6bfa-4965-bb83-5f7accda096b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('aa99b49f-6bfa-4965-bb83-5f7accda096b')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Evaluators] WITH CHECK CHECK CONSTRAINT [FK_EvaluatorSubjectId];

ALTER TABLE [dbo].[Exams] WITH CHECK CHECK CONSTRAINT [FK_ExamSubjectId];

ALTER TABLE [dbo].[Exams] WITH CHECK CHECK CONSTRAINT [FK_ExamEvaluationSchemeId];

ALTER TABLE [dbo].[GradeSchemes] WITH CHECK CHECK CONSTRAINT [FK_ExamId];


GO
PRINT N'Update complete.';


GO
